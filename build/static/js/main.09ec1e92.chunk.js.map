{"version":3,"sources":["Api.js","NavBar.js","Home.js","AllGuides.js","AddGuide.js","EditGuide.js","AllTourInquiries.js","EditTourInquiry.js","AddTourInquiry.js","RequestPayment.js","AllPayments.js","AllPaymentRequests.js","Pay.js","Process.js","Cancel.js","Success.js","App.js","serviceWorker.js","index.js"],"names":["Api","authToken","headers","BASE_URL","process","this","console","log","fetch","method","createHeaders","id","item","guideid","body","tourInquiryId","inquiryId","NavBar","props","state","isOpen","toggle","bind","setState","isAuthenticated","login","logout","Navbar","color","expand","Brand","tag","Link","to","href","Toggle","onClick","Collapse","Nav","className","NavItem","Button","Component","Home","authenticated","navbar","Container","fluid","user","name","AllGuides","data","handleClick","api","getAllGuides","response","json","jayson","fetchGuides","deleteGuide","then","history","push","result","map","guide","index","guideUrl","key","email","phone","Table","responsive","striped","bordered","hover","withRouter","AddGuide","handleSubmit","event","preventDefault","target","JSON","stringify","value","nickname","password","englishChecked","frenchChecked","createGuide","Form","onSubmit","Group","controlid","Label","Control","size","placeholder","type","controlId","Check","label","defaultChecked","variant","EditGuide","getGuideById","match","params","french","english","guideId","Number","updateGuide","updatedGuideData","fetchGetGuideById","defaultValue","AllTourInquiries","getAllTourInquiries","fetchTourInquiries","deleteTourInquiry","tourInquiry","tourInquiriyUrl","surname","EditTourInquiry","getTourInquiryById","days","persons","date","message","updateTourInquiry","updateTourInquiryData","fetchGetTourInquiryById","as","rows","AddTourInquiry","refs","btn","setAttribute","ref","RequestPayment","deposit","Date","createPaymentRequest","thisRequestPayment","textForTheMail","substr","AllPaymentRequests","getAllPaymentRequests","fetchPaymentRequests","paymentRequest","requestPaymentUrl","mailText","requestDate","clientMail","Pay","getDepositAmountByInquiryId","text","createPayment","createPaymentData","paypalUrl","window","location","replace","fetchGetDepositAmountByInquiryId","Process","Alert","Heading","Cancel","Success","AuthWrapper","withOktaAuth","checkAuthentication","authState","authService","getUser","getAccessToken","accessToken","path","exact","render","App","issuer","clientId","redirectUri","origin","pkce","component","LoginCallback","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"sSA8IiBA,E,WA5Ib,WAAYC,GAAY,yBAIxBC,QAAU,CACR,OAAU,mBACV,eAAgB,oBANK,KAYvBC,SAAYC,6BAXVC,KAAKJ,UAAYA,E,4DAgBjB,OAFAK,QAAQC,IAAIH,uMAELC,KAAKJ,UAAL,2BACFI,KAAKH,SADH,IAEL,cAAiB,UAAYG,KAAKJ,YAChCI,KAAKH,U,+JAIIM,MAAMH,KAAKF,SAAW,UAAW,CAC5CM,OAAQ,MACRP,QAASG,KAAKK,kB,0NAICC,G,iFACJH,MAAM,GAAD,OAAIH,KAAKF,SAAW,UAApB,YAAiCQ,GAAM,CACvDF,OAAQ,MACRP,QAASG,KAAKK,kB,0NAIAC,G,iFACHH,MAAM,GAAD,OAAIH,KAAKF,SAAW,UAApB,YAAiCQ,GAAM,CACvDF,OAAQ,SACRP,QAASG,KAAKK,kB,0NAIAE,EAAMC,G,wEACpBP,QAAQC,IAAI,YAAeM,G,SAChBL,MAAM,GAAD,OAAIH,KAAKF,SAAW,UAApB,YAAiCU,GAAW,CAC5DJ,OAAO,MACPP,QAASG,KAAKK,gBACdI,KAAMF,I,4NAIQA,G,iFACHJ,MAAM,GAAD,OAAIH,KAAKF,SAAW,WAAa,CACjDM,OAAO,OACPP,QAASG,KAAKK,gBACdI,KAAMF,I,qTAOOJ,MAAMH,KAAKF,SAAW,kBAAmB,CACpDM,OAAQ,MACRP,QAASG,KAAKK,kB,gOAIOC,G,iFACVH,MAAM,GAAD,OAAIH,KAAKF,SAAW,kBAApB,YAAyCQ,GAAM,CAC/DF,OAAQ,MACRP,QAASG,KAAKK,kB,gOAIMC,G,iFACTH,MAAM,GAAD,OAAIH,KAAKF,SAAW,kBAApB,YAAyCQ,GAAM,CAC/DF,OAAQ,SACRP,QAASG,KAAKK,kB,gOAIME,EAAMG,G,wEAC1BT,QAAQC,IAAI,YAAeQ,G,SAChBP,MAAM,GAAD,OAAIH,KAAKF,SAAW,kBAApB,YAAyCY,GAAiB,CAC1EN,OAAO,MACPP,QAASG,KAAKK,gBACdI,KAAMF,I,kOAIcA,G,iFACTJ,MAAM,GAAD,OAAIH,KAAKF,SAAW,aAAe,CACnDM,OAAO,OACPP,QAASG,KAAKK,gBACdI,KAAMF,I,uTAMKJ,MAAMH,KAAKF,SAAW,oBAAqB,CACtDM,OAAQ,MACRP,QAASG,KAAKK,kB,kOAISE,G,iFACZJ,MAAM,GAAD,OAAIH,KAAKF,SAAW,qBAAuB,CAC3DM,OAAO,OACPP,QAASG,KAAKK,gBACdI,KAAMF,I,0OAMsBI,G,iFACnBR,MAAM,GAAD,OAAIH,KAAKF,SAAW,oBAApB,YAA2Ca,GAAa,CACxEP,OAAQ,MACRP,QAASG,KAAKK,kB,4NAMEE,G,iFACLJ,MAAM,GAAD,OAAIH,KAAKF,SAAW,gBAAkB,CACtDM,OAAO,OACPP,QAASG,KAAKK,gBACdI,KAAMF,I,0LClFCK,E,kDA9Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,QAAQ,GACvB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAHG,E,qDAOjBjB,KAAKkB,SAAS,CACZH,QAASf,KAAKc,MAAMC,W,+BAId,IAAD,EACoCf,KAAKa,MAAxCM,EADD,EACCA,gBAAiBC,EADlB,EACkBA,MAAOC,EADzB,EACyBA,OAEhC,OAAO,kBAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAO,MAClC,kBAACF,EAAA,EAAOG,MAAR,CAAcC,IAAKC,OAAMC,GAAG,KAA5B,QAECT,EAAkB,8BACjB,kBAACG,EAAA,EAAOG,MAAR,CAAcI,KAAK,WAAnB,cACA,kBAACP,EAAA,EAAOG,MAAR,CAAcI,KAAK,mBAAnB,mBAGW,+BAIb,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,QAAS/B,KAAKgB,SAC7B,kBAACM,EAAA,EAAOU,SAAR,KACE,kBAACC,EAAA,EAAD,CAAKC,UAAU,WAGXf,EAIA,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQb,MAAM,YAAYQ,QAASV,GAAnC,WAJF,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQb,MAAM,YAAYQ,QAASX,GAAnC,iB,GApCOiB,a,kBCiCNC,E,uKA9BH,IACDlB,EAAUpB,KAAKa,MAAfO,MACP,OAAiC,OAA7BpB,KAAKa,MAAM0B,cACN,yCAIP,yBAAKL,UAAU,OACZlC,KAAKa,MAAM2B,OACZ,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ1C,KAAKa,MAAM0B,cACX,6BACE,uCAAavC,KAAKa,MAAM8B,KAAKC,MAC7B,kBAACR,EAAA,EAAD,CAAQb,MAAM,aACZ,kBAAC,OAAD,CAAMW,UAAU,WAAWN,GAAG,WAA9B,gCAGJ,6BACE,2EACA,kBAACQ,EAAA,EAAD,CAAQb,MAAM,YAAYQ,QAASX,GAAnC,oC,GArBKiB,a,QCCbQ,E,kDAIJ,aAAe,IAAD,8BACZ,gBAJF/B,MAAQ,CACNgC,KAAM,IAIN,EAAKC,YAAc,EAAKA,YAAY9B,KAAjB,gBAFP,E,mLAMZhB,QAAQC,IAAI,mB,SAEWF,KAAKa,MAAMmC,IAAIC,e,cAAhCC,E,gBACeA,EAASC,O,OAAxBC,E,OACNnD,QAAQC,IAAIkD,GAMRpD,KAAKkB,SAAS,CACZ4B,KAAKM,I,gJAKXpD,KAAKqD,gB,kCAEK/C,GAAK,IAAD,OACdL,QAAQC,IAAI,YAAcI,GAC1BN,KAAKa,MAAMmC,IAAIM,YAAYhD,GAAIiD,MAAK,WAAQtD,QAAQC,IAAI,iBAAkB,EAAKmD,mB,sCAQjE/C,GACdL,QAAQC,IAAI,WAAaI,GAEzBN,KAAKa,MAAM2C,QAAQC,KAAK,iB,+BAIhB,IAAD,OACPxD,QAAQC,IAAI,aADL,IAMDwD,EAJW1D,KAAKc,MAAdgC,KAIYa,KAAI,SAACC,EAAOC,GAI9B,IAAMC,EAAW,WAAaF,EAAMtD,GAYpC,OAEM,wBAAIyD,IAAKF,GACP,4BAAI,kBAAC,OAAD,CAAMjC,GAAIkC,GAAWF,EAAMhB,OAC/B,4BAAKgB,EAAMI,OACX,4BAAKJ,EAAMK,OACX,4BAAI,4BAAQlC,QAAS,WAAQ,EAAKgB,YAAYa,EAAMtD,MAAhD,WACJ,4BAAI,4BAAQyB,QAAS,WAAS,EAAKlB,MAAM2C,QAAQC,KAAK,eAAeG,EAAMtD,MAAvE,aAQd,OACE,6BACCN,KAAKa,MAAM2B,OACd,kBAAC0B,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACtC,+BACC,4BAEE,oCACA,sCACA,4CACA,iCACA,mCAGJ,+BAAQZ,S,GAhGWrB,aAuGTkC,cAAW1B,G,SCzGpB2B,E,kDAKJ,aAAe,IAAD,8BAEZ,gBANF1D,MAAQ,GAON,EAAK2D,aAAe,EAAKA,aAAaxD,KAAlB,gBAHR,E,kGAMKyD,G,8EACjBA,EAAMC,iBACN1E,QAAQC,IAAIwE,EAAME,QAMZnE,EAAOoE,KAAKC,UAAU,CAC1B,KAAQJ,EAAME,OAAOhC,KAAKmC,MAAO,SAAYL,EAAME,OAAOI,SAASD,MACnE,SAAYL,EAAME,OAAOK,SAASF,MAElC,QAAW/E,KAAKc,MAAMoE,eACtB,OAAUlF,KAAKc,MAAMqE,cACrB,MAAST,EAAME,OAAOZ,MAAMe,MAC5B,MAASL,EAAME,OAAOX,MAAMc,Q,SAIP/E,KAAKa,MAAMmC,IAAIoC,YAAY3E,G,cAIlDT,KAAKa,MAAM2C,QAAQC,KAAK,K,iJAK1BzD,KAAKkB,SAAS,CAGbiE,eAAgB,EAChBD,gBAAiB,M,+BAIR,IAAD,OACP,OAEE,6BACGlF,KAAKa,MAAM2B,OACZ,kBAAC6C,EAAA,EAAD,CAAMC,SAAUtF,KAAKyE,cAEnB,oDACA,6BACA,kBAACY,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBACpB,kBAACH,EAAA,EAAKI,MAAN,oCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,OAAOgD,YAAY,oBAChD,kBAACP,EAAA,EAAKI,MAAN,wCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,WAAWgD,YAAY,wBACpD,kBAACP,EAAA,EAAKI,MAAN,yCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,WAAWgD,YAAY,wBACpD,kBAACP,EAAA,EAAKI,MAAN,sCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAKE,KAAK,QAAQjD,KAAK,UAC1C,kBAACyC,EAAA,EAAKI,MAAN,4CACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,UAC7B,kBAACyC,EAAA,EAAKE,MAAN,CAAYO,UAAU,qBACpB,kBAACT,EAAA,EAAKU,MAAN,CAAYF,KAAK,WAAWjD,KAAK,UAAUoD,MAAM,uBAAuBC,eAAgBjG,KAAKc,MAAMoE,eACjGnD,QAAS,kBAAM,EAAKb,SAAS,CAAEgE,gBAAiB,EAAKpE,MAAMoE,oBAC7D,kBAACG,EAAA,EAAKU,MAAN,CAAYF,KAAK,WAAWjD,KAAK,SAASoD,MAAM,4BAAyBC,eAAgBjG,KAAKc,MAAMqE,cAAepD,QAAS,kBAAM,EAAKb,SAAS,CAAEiE,eAAgB,EAAKrE,MAAMqE,oBAE/K,kBAAC/C,EAAA,EAAD,CAAQ8D,QAAQ,UAAUL,KAAK,UAA/B,a,GAxEWxD,aAmFRkC,cAAWC,GCnFpB2B,E,kDAKJ,aAAe,IAAD,8BACZ,gBALFrF,MAAQ,CACNgC,KAAM,IAKN,EAAK2B,aAAe,EAAKA,aAAaxD,KAAlB,gBAFR,E,kMAOWjB,KAAKa,MAAMmC,IAAIoD,aAAapG,KAAKa,MAAMwF,MAAMC,OAAOhG,I,cAArE4C,E,gBACeA,EAASC,O,OAAxBC,E,OACNnD,QAAQC,IAAIkD,GAGZpD,KAAKkB,SAAS,CACZ4B,KAAMM,EAEN+B,cAAe/B,EAAOmD,OACtBrB,eAAgB9B,EAAOoD,U,kLAIR9B,G,oFACjBA,EAAMC,iBAGN1E,QAAQC,IAAIwE,EAAME,OAAO2B,QAEnB9F,EAAOoE,KAAKC,UAAU,CAC1B,KAAQJ,EAAME,OAAOhC,KAAKmC,MAAO,SAAYL,EAAME,OAAOI,SAASD,MACnE,SAAYL,EAAME,OAAOK,SAASF,MAElC,QAAW/E,KAAKc,MAAMoE,eACtB,OAAUlF,KAAKc,MAAMqE,cACrB,MAAST,EAAME,OAAOZ,MAAMe,MAC5B,MAASL,EAAME,OAAOX,MAAMc,QAExB0B,EAAUC,OAAO1G,KAAKa,MAAMwF,MAAMC,OAAOhG,I,SAEhBN,KAAKa,MAAMmC,IAAI2D,YAAYlG,EAAMgG,G,cAA1DG,E,gBACeA,EAAiBzD,O,OAAhCC,E,OAENpD,KAAKkB,SAAS,CACZ4B,KAAMM,IAERpD,KAAKa,MAAM2C,QAAQC,KAAK,K,kJAKxBzD,KAAK6G,sB,+BAEG,IAAD,OACC/D,EAAS9C,KAAKc,MAAdgC,KAER,OADA7C,QAAQC,IAAI,oBAAsBF,KAAKc,MAAMoE,gBACzCpC,EAGA,6BACG9C,KAAKa,MAAM2B,OACZ,kBAAC6C,EAAA,EAAD,CAAMC,SAAUtF,KAAKyE,cAEnB,kDACA,6BACA,kBAACY,EAAA,EAAKE,MAAN,CAAYO,UAAU,gBACpB,kBAACT,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,OAAOkE,aAAchE,EAAKF,OACvD,kBAACyC,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,WAAWkE,aAAchE,EAAKkC,WAC3D,kBAACK,EAAA,EAAKI,MAAN,6BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,WAAWkE,aAAa,KACrD,kBAACzB,EAAA,EAAKI,MAAN,sCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,QAAQiD,KAAK,QAAQiB,aAAchE,EAAKkB,QACrE,kBAACqB,EAAA,EAAKI,MAAN,4CACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,QAAQkE,aAAchE,EAAKmB,QACxD,kBAACoB,EAAA,EAAKE,MAAN,CAAYO,UAAU,qBACpB,kBAACT,EAAA,EAAKU,MAAN,CAAYF,KAAK,WAAWjD,KAAK,UAAUoD,MAAM,uBAAuBC,eAAgBjG,KAAKc,MAAMoE,eACjGnD,QAAS,kBAAM,EAAKb,SAAS,CAAEgE,gBAAiB,EAAKpE,MAAMoE,oBAE7D,kBAACG,EAAA,EAAKU,MAAN,CAAYhE,QAAS,kBAAM,EAAKb,SAAS,CAAEiE,eAAgB,EAAKrE,MAAMqE,iBAAkBU,KAAK,WAAWjD,KAAK,SAASoD,MAAM,4BAAyBC,eAAgBjG,KAAKc,MAAMqE,iBAElL,kBAAC/C,EAAA,EAAD,CAAQ8D,QAAQ,UAAUL,KAAK,UAA/B,kBAvBN,MA2BK,+C,GAxFWxD,aA8FTkC,cAAW4B,GC5FpBY,E,kDAIJ,aAAe,IAAD,8BACZ,gBAJFjG,MAAQ,CACNgC,KAAM,IAIN,EAAKC,YAAc,EAAKA,YAAY9B,KAAjB,gBAFP,E,0LAMZhB,QAAQC,IAAI,2B,SAcWF,KAAKa,MAAMmC,IAAIgE,sB,cAAhC9D,E,gBACeA,EAASC,O,OAAxBC,E,OACNnD,QAAQC,IAAIkD,GAEZpD,KAAKkB,SAAS,CACZ4B,KAAMM,I,gJAKRpD,KAAKiH,uB,kCAaK3G,GAAK,IAAD,OACdL,QAAQC,IAAI,YAAcI,GAG1BN,KAAKa,MAAMmC,IAAIkE,kBAAkB5G,GAAIiD,MAAK,WAAQtD,QAAQC,IAAI,iBAAkB,EAAK+G,0B,sCASvE3G,GACdL,QAAQC,IAAI,WAAaI,GAEzBN,KAAKa,MAAM2C,QAAQC,KAAK,yB,+BAIhB,IAAD,OACPxD,QAAQC,IAAI,aADL,IAODwD,EALW1D,KAAKc,MAAdgC,KAKYa,KAAI,SAACwD,EAAatD,GAIpC,IAAMuD,EAAkB,mBAAqBD,EAAY7G,GAUzD,OAEE,wBAAIyD,IAAKF,GACP,4BAAI,kBAAC,OAAD,CAAMjC,GAAIwF,GAAkBD,EAAYvE,KAAxC,IAA+CuE,EAAYE,UAC/D,4BAAKF,EAAYnD,OAEjB,4BAAI,4BAAQjC,QAAS,WAAQ,EAAKgB,YAAYoE,EAAY7G,MAAtD,WACJ,4BAAI,4BAAQyB,QAAS,WAAQ,EAAKlB,MAAM2C,QAAQC,KAAK,uBAAyB0D,EAAY7G,MAAtF,SACJ,4BAAI,4BAAQyB,QAAS,WAAQ,EAAKlB,MAAM2C,QAAQC,KAAK,qBAAuB0D,EAAY7G,MAApF,wBAYV,OACE,6BACCN,KAAKa,MAAM2B,OAEZ,kBAAC0B,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACtC,+BACE,4BAEE,oCACA,sCACA,iCACA,iCACA,mCAGJ,+BAAQZ,S,GA3HerB,aAkIhBkC,cAAWwC,GCjIpBO,E,kDAIF,aAAe,IAAD,8BACV,gBAJJxG,MAAQ,CACJgC,KAAM,IAIN,EAAK2B,aAAe,EAAKA,aAAaxD,KAAlB,gBAFV,E,wMAMajB,KAAKa,MAAMmC,IAAIuE,mBAAmBvH,KAAKa,MAAMwF,MAAMC,OAAOhG,I,cAA3E4C,E,gBACeA,EAASC,O,OAAxBC,E,OACNnD,QAAQC,IAAIkD,GAGZpD,KAAKkB,SAAS,CACZ4B,KAAMM,I,kLAGSsB,G,oFACjBA,EAAMC,iBAEAlE,EAAOoE,KAAKC,UAAU,CAC1B,KAAQJ,EAAME,OAAOhC,KAAKmC,MAAO,QAAWL,EAAME,OAAOyC,QAAQtC,MACjE,MAASL,EAAME,OAAOZ,MAAMe,MAE5B,KAAQL,EAAME,OAAO4C,KAAKzC,MAC1B,QAAWL,EAAME,OAAO6C,QAAQ1C,MAChC,KAAQL,EAAME,OAAO8C,KAAK3C,MAC1B,QAAWL,EAAME,OAAO+C,QAAQ5C,QAE5BrE,EAAgBgG,OAAO1G,KAAKa,MAAMwF,MAAMC,OAAOhG,I,SAEjBN,KAAKa,MAAMmC,IAAI4E,kBAAkBnH,EAAKC,G,cAApEmH,E,gBACeA,EAAsB1E,O,OAArCC,E,OAENpD,KAAKkB,SAAS,CACZ4B,KAAMM,IAERpD,KAAKa,MAAM2C,QAAQC,KAAK,K,kJAKzBzD,KAAK8H,4B,+BAGE,IAIEhF,EAAS9C,KAAKc,MAAdgC,KACR,OAAIA,GACA7C,QAAQC,IAAI,8BAAgC2E,KAAKC,UAAUhC,IAEvD,6BACC9C,KAAKa,MAAM2B,OACZ,kBAAC6C,EAAA,EAAD,CAAMC,SAAUtF,KAAKyE,cAEjB,kDACA,6BAEA,kBAACY,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,OAAOkE,aAAchE,EAAKF,OACvD,kBAACyC,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,UAAUkE,aAAchE,EAAKuE,UAC1D,kBAAChC,EAAA,EAAKI,MAAN,0BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAKE,KAAK,QAAQjD,KAAM,QAAQkE,aAAchE,EAAKkB,QAGtE,kBAACqB,EAAA,EAAKI,MAAN,2CACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,OAAOkE,aAAchE,EAAK0E,OAEvD,kBAACnC,EAAA,EAAKI,MAAN,4CACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,UAAUkE,aAAchE,EAAK2E,UAE1D,kBAACpC,EAAA,EAAKI,MAAN,yCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,OAAOgD,YAAY,uBAAuBkB,aAAchE,EAAK4E,OAE1F,kBAACrC,EAAA,EAAKI,MAAN,sBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,UAAUmF,GAAG,WAAWC,KAAK,IAAIlB,aAAchE,EAAK6E,UACjF,kBAACvF,EAAA,EAAD,CAAQ8D,QAAQ,UAAUL,KAAK,UAA/B,wBAQL,+C,GAzFexD,aA8FfkC,cAAW+C,GCYXW,E,kDA1GX,aAAe,IAAD,8BACd,gBAJAnH,MAAQ,CACJgC,KAAM,IAIV,EAAK2B,aAAe,EAAKA,aAAaxD,KAAlB,gBAFN,E,yDAKHyD,GAAQ,IAAD,OAClBA,EAAMC,iBAEN1E,QAAQC,IAAIwE,EAAME,QAClB5E,KAAKkI,KAAKC,IAAIC,aAAa,WAAY,YAEvCjI,MAAM,wCAAyC,CAC7CC,OAAQ,OACRK,KAAOoE,KAAKC,UAAU,CAAC,KAAQJ,EAAME,OAAOhC,KAAKmC,MAAM,QAAWL,EAAME,OAAOyC,QAAQtC,MAAO,MAAQL,EAAME,OAAOZ,MAAMe,MACzH,KAAQL,EAAME,OAAO4C,KAAKzC,MAAO,QAAWL,EAAME,OAAO6C,QAAQ1C,MACjE,KAAQL,EAAME,OAAO8C,KAAK3C,MAAO,QAAWL,EAAME,OAAO+C,QAAQ5C,QACjElF,QAAS,CACL,eAAgB,sBAEnB0D,MAAK,kBAAM,EAAK1C,MAAM2C,QAAQC,KAAK,iB,+BAOtC,OADiBzD,KAAKc,MAAdgC,KAKR,kBAACuC,EAAA,EAAD,CAAMC,SAAUtF,KAAKyE,cACrB,kBAACY,EAAA,EAAKE,MAAN,CAAYC,UAAU,eACtB,4CACA,kKACA,6BACA,kBAACH,EAAA,EAAKI,MAAN,8BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAO,KAAK/C,KAAK,OAAOgD,YAAY,oBAClD,kBAACP,EAAA,EAAKI,MAAN,iCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAO,KAAK/C,KAAK,UAAUgD,YAAY,uBACrD,kBAACP,EAAA,EAAKI,MAAN,gCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAO,KAAKE,KAAK,QAAQjD,KAAK,QAAQgD,YAAY,uBAMlE,kBAACP,EAAA,EAAKE,MAAN,CAAYO,UAAU,iCACtB,kBAACT,EAAA,EAAKI,MAAN,2CACE,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAO,KAAK/C,KAAK,OAAOmF,GAAG,UACzC,qCACE,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,wCAGF,kBAAC1C,EAAA,EAAKE,MAAN,CAAYO,UAAU,oCACxB,kBAACT,EAAA,EAAKI,MAAN,4CACE,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAO,KAAK/C,KAAK,UAAUmF,GAAG,UAC1C,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,wCAGF,kBAAC1C,EAAA,EAAKE,MAAN,CAAYO,UAAU,wBACtB,kBAACT,EAAA,EAAKI,MAAN,yCACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAO,KAAKE,KAAK,OAAOjD,KAAK,OAAOgD,YAAY,0BAE9D,kBAACP,EAAA,EAAKE,MAAN,CAAYO,UAAU,sCACtB,kBAACT,EAAA,EAAKI,MAAN,sBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAO,KAAK/C,KAAK,UAAWmF,GAAG,WAAWC,KAAK,OAG/D,kBAAC5F,EAAA,EAAD,CAAQiG,IAAI,MAAMnC,QAAQ,UAAUL,KAAK,UAAzC,SAKU,+C,GAxGiBxD,aCCvBiG,GCDoBjG,Y,kDDOtB,aAAe,IAAD,8BACV,gBALJvB,MAAQ,CACJgC,KAAM,IAKN,EAAK2B,aAAe,EAAKA,aAAaxD,KAAlB,gBAFV,E,wMAOajB,KAAKa,MAAMmC,IAAIuE,mBAAmBvH,KAAKa,MAAMwF,MAAMC,OAAOhG,I,cAA3E4C,E,gBACeA,EAASC,O,OAAxBC,E,OACNnD,QAAQC,IAAIkD,GAGZpD,KAAKkB,SAAS,CACV4B,KAAMM,I,kLAKKsB,G,kFACfA,EAAMC,iBAEAlE,EAAOoE,KAAKC,UAAU,CACxB,UAAa9E,KAAKa,MAAMwF,MAAMC,OAAOhG,GACrC,QAAWoE,EAAME,OAAO2D,QAAQxD,MAChC,SAAYL,EAAME,OAAO+C,QAAQ5C,MACjC,WAAcL,EAAME,OAAOZ,MAAMe,MAEjC,YAAe,IAAIyD,O,SAIUxI,KAAKa,MAAMmC,IAAIyF,qBAAqBhI,G,cAA/DiI,E,gBACeA,EAAmBvF,O,OAAlCC,E,OAENpD,KAAKkB,SAAS,CACV4B,KAAMM,I,iJASVpD,KAAK8H,4B,+BAeC,IAIEhF,EAAS9C,KAAKc,MAAdgC,KAER,GADA7C,QAAQC,IAAI,0BAA4B4C,GACpCA,GAAQA,EAAKF,KAAM,CAEnB,IAAI+F,EAAiB,QAAU7F,EAAKF,KAAf,8FAEkFE,EAAKxC,GAFvF,oEAKmBwC,EAAKF,KAAO,IAAME,EAAKuE,QAL1C,mBAK8EvE,EAAK0E,KALnF,yBAK0H1E,EAAK4E,KAAKkB,OAAO,EAAG,IAL9I,yBAOf9F,EAAK2E,QAPU,+BAOsC3E,EAAK6E,QAP3C,qJAarB,OADA1H,QAAQC,IAAIyI,GAGR,kBAACtD,EAAA,EAAD,CAAMC,SAAUtF,KAAKyE,cAEjB,4DAAkC3B,EAAKF,KAAvC,IAA8CE,EAAKuE,SACnD,6BACA,kBAAChC,EAAA,EAAKE,MAAN,CAAYO,UAAU,sBAClB,kBAACT,EAAA,EAAKI,MAAN,0BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAO,QAAQiD,KAAK,QAAQiB,aAAchE,EAAKkB,QAEvE,kBAACqB,EAAA,EAAKI,MAAN,2BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,aAAagD,YAAY,sBACtD,kBAACP,EAAA,EAAKI,MAAN,wBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,UAAUgD,YAAY,iCAGnD,kBAACP,EAAA,EAAKI,MAAN,6BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAK/C,KAAK,UAAUmF,GAAG,WAAWC,KAAK,KAAKlB,aAAc6B,IAC7E,kBAACvG,EAAA,EAAD,CAAQ8D,QAAQ,UAAUL,KAAK,UAA/B,0BAQhB,OAAO,+C,GAhHcxD,cAoHdkC,cAAW+D,GEnHpBO,E,kDAMJ,aAAe,IAAD,8BACZ,gBAJJ/H,MAAQ,CACJgC,KAAM,IAEM,E,4LAMZ7C,QAAQC,IAAI,6B,SAcWF,KAAKa,MAAMmC,IAAI8F,wB,cAAhC5F,E,gBACeA,EAASC,O,OAAxBC,E,OACNnD,QAAQC,IAAIkD,GAEZpD,KAAKkB,SAAS,CACZ4B,KAAMM,I,gJAKRpD,KAAK+I,yB,+BAoBL9I,QAAQC,IAAI,aADL,IAMDwD,EAJW1D,KAAKc,MAAdgC,KAIYa,KAAI,SAACqF,EAAgBnF,GAIvC,IAAMoF,EAAoB,oBAAsBD,EAAe1I,GAU/D,OAEE,wBAAIyD,IAAKF,GACP,4BAAI,kBAAC,OAAD,CAAMjC,GAAIqH,GAAoBD,EAAerI,YACjD,4BAAKqI,EAAeE,UACpB,4BAAKF,EAAeG,aACpB,4BAAKH,EAAeI,gBAa1B,OACE,6BACCpJ,KAAKa,MAAM2B,OACZ,kBAAC0B,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACtC,+BACE,4BAEE,0CACA,yCACA,6CACA,+CAIJ,+BAAQZ,S,GA5GiBrB,aCA3BgH,GDkHS9E,YAAWsE,G,kDC9GtB,aAAe,IAAD,8BACV,gBAJJ/H,MAAQ,CACJgC,KAAM,IAIN,EAAK2B,aAAe,EAAKA,aAAaxD,KAAlB,gBAFV,E,iNAMajB,KAAKa,MAAMmC,IAAIsG,4BAA4BtJ,KAAKa,MAAMwF,MAAMC,OAAO3F,W,cAApFuC,E,gBACeA,EAASqG,O,OAAxBnG,E,OACNnD,QAAQC,IAAIkD,GAGZpD,KAAKkB,SAAS,CACV4B,KAAMM,I,kLAMKsB,G,kFACfA,EAAMC,iBAGN1E,QAAQC,IAAIwE,EAAME,QACZnE,EAAOoE,KAAKC,UAAU,CACxB,UAAa9E,KAAKa,MAAMwF,MAAMC,OAAO3F,UACrC,QAAW+D,EAAME,OAAO2D,QAAQxD,MAChC,YAAe,IAAIyD,O,SAGSxI,KAAKa,MAAMmC,IAAIwG,cAAc/I,G,cAAvDgJ,E,gBAGkBA,EAAkBF,O,OAApCG,E,OACNzJ,QAAQC,IAAIwJ,GACZ1J,KAAKkB,SAAS,CACZ4B,KAAK4G,IAEJC,OAAOC,SAASC,QAAQH,G,kJAsB3B1J,KAAK8J,qC,+BAIC,IAIEhH,EAAS9C,KAAKc,MAAdgC,KACR,OAAIA,GACA7C,QAAQC,IAAI,cAAgB4C,GAGxB,kBAACuC,EAAA,EAAD,CAAMC,SAAUtF,KAAKyE,cAEjB,iFACA,6BACA,kBAACY,EAAA,EAAKE,MAAN,CAAYO,UAAU,WAClB,kBAACT,EAAA,EAAKI,MAAN,sBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,KAAKE,KAAK,SAASjD,KAAK,UAAUkE,aAAchE,IAEnE,kBAACV,EAAA,EAAD,CAAQ8D,QAAQ,UAAUL,KAAK,UAA/B,UAST,+C,GA7FGxD,cAiGHkC,cAAW8E,G,QCpFXU,E,uKAXP,OACI,kBAACC,EAAA,EAAD,CAAO9D,QAAQ,WAAU,kBAAC8D,EAAA,EAAMC,QAAP,oCACzB,uBAAG/H,UAAU,QAAb,sG,GALUG,aCcP6H,E,uKAXP,OACI,kBAACF,EAAA,EAAD,CAAO9D,QAAQ,UACf,uBAAGhE,UAAU,QAAb,yE,GALSG,aCaN8H,E,uKAVP,OACA,kBAACH,EAAA,EAAD,CAAO9D,QAAQ,WACf,uBAAGhE,UAAU,QAAb,yG,GALcG,aCiBhB+H,EAAcC,uBAAY,kDAE9B,WAAYxJ,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEyB,cAAe,KAAMI,KAAM,KAAMK,IAAK,IAAIrD,GACzD,EAAK2K,oBAAsB,EAAKA,oBAAoBrJ,KAAzB,gBAHV,EAFW,sMASAjB,KAAKa,MAAM0J,UAAUpJ,gBATrB,WAStBoB,EATsB,UAUNvC,KAAKc,MAAMyB,cAVL,qBAWtBA,EAXsB,iCAYLvC,KAAKa,MAAM2J,YAAYC,UAZlB,cAYlB9H,EAZkB,iBAaA3C,KAAKa,MAAM2J,YAAYE,iBAbvB,QAapBC,EAboB,OAcxB3K,KAAKkB,SAAS,CAAEqB,gBAAeI,OAAMK,IAAK,IAAIrD,EAAIgL,KAd1B,wBAiBxB3K,KAAKkB,SAAS,CAAEqB,gBAAeI,KAAK,KAAMK,IAAK,IAAIrD,IAjB3B,2PAuB5BK,KAAKsK,sBAvBuB,2PA2B5BtK,KAAKsK,sBA3BuB,iPA+BK,OAA7BtK,KAAKc,MAAMyB,cA/Ba,iDAgC5BvC,KAAKa,MAAM2J,YAAYpJ,MAAM,KAhCD,+OAoC5BpB,KAAKa,MAAM2J,YAAYnJ,OAAO,KApCF,qIAuCpB,IAAD,SAC0BrB,KAAKc,MAAjCyB,EADE,EACFA,cAAeI,EADb,EACaA,KAAMK,EADnB,EACmBA,IAE1B,GAAsB,OAAlBT,EACF,OAAO,KAGT,IAAMC,EAAS,kBAAC,EAAD,CACbrB,gBAAiBoB,EACjBnB,MAAOpB,KAAKoB,MAAMH,KAAKjB,MACvBqB,OAAQrB,KAAKqB,OAAOJ,KAAKjB,QAI3B,OAEE,kBAAC,IAAD,KACE,kBAAC,cAAD,CACE4K,KAAK,IACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAUA,EAAV,CAAkBO,MAAO,EAAKA,MAAMH,KAAK,GAAOsB,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,EAAKR,OAAQA,QAEjI,kBAAC,cAAD,CACEoI,KAAK,UACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAeA,EAAf,CAAuB0B,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,EAAKR,OAAQA,QAEvG,kBAAC,cAAD,CACCoI,KAAK,cACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAcA,EAAd,CAAsB0B,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,EAAKR,OAAQA,QAEvG,kBAAC,cAAD,CACEoI,KAAK,mBACLE,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAeA,EAAf,CAAsB0B,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,EAAKR,OAAQA,QAEvG,kBAAC,cAAD,CACEoI,KAAK,kBACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAqBA,EAArB,CAA6B0B,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,EAAKR,OAAQA,QAE9G,kBAAC,IAAD,CACEoI,KAAK,WACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAmBA,EAAnB,CAA2B0B,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,EAAKR,OAAQA,QAE5G,kBAAC,IAAD,CACEoI,KAAK,WACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAoB0B,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,EAAKR,OAAQA,QAErG,kBAAC,cAAD,CACEoI,KAAK,2BACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAoBA,EAApB,CAA4B0B,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,EAAKR,OAAQA,QAa7G,kBAAC,cAAD,CACEoI,KAAK,wBACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAAoBA,EAApB,CAA2B0B,cAAeA,EAAeI,KAAMA,EAAMK,IAAKA,QAE/F,kBAAC,IAAD,CACE4H,KAAK,uBACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAD,iBAASA,EAAT,CAAgBmC,IAAKA,QAE1C,kBAAC,IAAD,CACE4H,KAAK,WACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAYA,MAElC,kBAAC,IAAD,CACE+J,KAAK,UACLC,OAAO,EACPC,OAAQ,SAACjK,GAAD,OAAW,kBAAC,EAAWA,WA5HT,GAA6BwB,cAqJ9C0I,E,uKAdX,OACE,kBAAC,gBAAD,KACE,kBAAC,WAAD,CAAUC,OAAO,6CACXC,SAAUlL,uBACVmL,YAAavB,OAAOC,SAASuB,OAAS,YACtCC,MAAM,GACV,kBAAC,IAAD,CAAOR,KAAK,YAAYS,UAAWC,kBACnC,kBAAClB,EAAD,Y,GAVQ/H,aC7IEkJ,QACW,cAA7B5B,OAAOC,SAAS4B,UAEe,UAA7B7B,OAAOC,SAAS4B,UAEhB7B,OAAOC,SAAS4B,SAASnF,MACvB,2DCMNoF,IAASX,OAoBc,kBAAC,EAAD,MACrBY,SAASC,eAAe,SDsFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvI,MAAK,SAAAwI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjM,QAAQiM,MAAMA,EAAMvE,c","file":"static/js/main.09ec1e92.chunk.js","sourcesContent":["class Api {\r\n\r\n    constructor(authToken) {\r\n      this.authToken = authToken;\r\n    }\r\n  \r\n    headers = {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    };\r\n  \r\n    //BASE_URL = 'http://localhost:8080/api/v1';\r\n\r\n    \r\n    BASE_URL =  process.env.REACT_APP_PROXY;\r\n  \r\n    createHeaders() {\r\n      console.log(process.env);\r\n      //  console.log(this.authToken);\r\n      return this.authToken ? {\r\n        ...this.headers,\r\n        'Authorization': 'Bearer ' + this.authToken\r\n      } : this.headers;\r\n    }\r\n  \r\n    async getAllGuides() {\r\n      return await fetch(this.BASE_URL + \"/guides\", {\r\n        method: 'GET',\r\n        headers: this.createHeaders()\r\n      });\r\n    }\r\n  \r\n    async getGuideById(id) {\r\n      return await fetch(`${this.BASE_URL+  \"/guides\"}/${id}`, {\r\n        method: 'GET',\r\n        headers: this.createHeaders()\r\n      });\r\n    }\r\n  \r\n    async deleteGuide(id) {\r\n      return await fetch(`${this.BASE_URL+  \"/guides\"}/${id}`, {\r\n        method: 'DELETE',\r\n        headers: this.createHeaders()\r\n      });\r\n    }\r\n  \r\n    async updateGuide(item, guideid) {\r\n        console.log(\"item ID: \" +  guideid);\r\n      return await fetch(`${this.BASE_URL+  \"/guides\"}/${guideid}`, {\r\n        method:'PUT',\r\n        headers: this.createHeaders(),\r\n        body: item,\r\n      });\r\n    }\r\n  \r\n    async createGuide(item) {\r\n      return await fetch(`${this.BASE_URL+  \"/guides\"}`, {\r\n        method:'POST',\r\n        headers: this.createHeaders(),\r\n        body: item,\r\n      });\r\n    }\r\n\r\n    // TOUR INQUIRIES\r\n\r\n    async getAllTourInquiries() {\r\n        return await fetch(this.BASE_URL + \"/tour-inquiries\", {\r\n          method: 'GET',\r\n          headers: this.createHeaders()\r\n        });\r\n      }\r\n    \r\n      async getTourInquiryById(id) {\r\n        return await fetch(`${this.BASE_URL+  \"/tour-inquiries\"}/${id}`, {\r\n          method: 'GET',\r\n          headers: this.createHeaders()\r\n        });\r\n      }\r\n    \r\n      async deleteTourInquiry(id) {\r\n        return await fetch(`${this.BASE_URL+  \"/tour-inquiries\"}/${id}`, {\r\n          method: 'DELETE',\r\n          headers: this.createHeaders()\r\n        });\r\n      }\r\n    \r\n      async updateTourInquiry(item, tourInquiryId) {\r\n          console.log(\"item ID: \" +  tourInquiryId);\r\n        return await fetch(`${this.BASE_URL+  \"/tour-inquiries\"}/${tourInquiryId}`, {\r\n          method:'PUT',\r\n          headers: this.createHeaders(),\r\n          body: item,\r\n        });\r\n      }\r\n    \r\n      async createTourInquiry(item) {\r\n        return await fetch(`${this.BASE_URL+  \"/bookings\"}`, {\r\n          method:'POST',\r\n          headers: this.createHeaders(),\r\n          body: item,\r\n        });\r\n      }\r\n\r\n      //PAYMENT REQUEST\r\n      async getAllPaymentRequests() {\r\n        return await fetch(this.BASE_URL + \"/payment-requests\", {\r\n          method: 'GET',\r\n          headers: this.createHeaders()\r\n        });\r\n      }\r\n\r\n      async createPaymentRequest(item) {\r\n        return await fetch(`${this.BASE_URL+  \"/payment-requests\"}`, {\r\n          method:'POST',\r\n          headers: this.createHeaders(),\r\n          body: item,\r\n        });\r\n      }\r\n\r\n\r\n    // //PAYMENT PROCESS WITHOUT PAYPAL YET\r\n    async getDepositAmountByInquiryId(inquiryId) {\r\n      return await fetch(`${this.BASE_URL+  \"/getdepositamount\"}/${inquiryId}`, {\r\n        method: 'GET',\r\n        headers: this.createHeaders()\r\n      });\r\n    }\r\n\r\n    //PAYMENT PROCESS - PAYPAL\r\n      \r\n    async createPayment(item) {\r\n      return await fetch(`${this.BASE_URL+  \"/makepayment\"}`, {\r\n        method:'POST',\r\n        headers: this.createHeaders(),\r\n        body: item,\r\n      });\r\n    }\r\n    \r\n\r\n\r\n  }\r\n  \r\n  export default Api;","import React, { Component } from 'react';\r\nimport { Button, Nav, Navbar, NavItem } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isOpen: false };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated, login, logout } = this.props;\r\n\r\n    return <Navbar color=\"light\" expand=\"md\">\r\n      <Navbar.Brand tag={Link} to=\"/\">Home</Navbar.Brand>\r\n\r\n      {isAuthenticated ? <span>\r\n        <Navbar.Brand href=\"/guides\">All guides</Navbar.Brand>\r\n        <Navbar.Brand href=\"/tour-inquiries\">Tour inquiries</Navbar.Brand> \r\n        {/* <Navbar.Brand href=\"/paymentRequests\">Payment requests</Navbar.Brand>\r\n          <Navbar.Brand href=\"/payments\">Payments</Navbar.Brand> */}\r\n          </span>: <span/>}\r\n\r\n\r\n\r\n      <Navbar.Toggle onClick={this.toggle} />\r\n      <Navbar.Collapse >\r\n        <Nav className=\"ml-auto\">\r\n\r\n\r\n          {!isAuthenticated ?\r\n            <NavItem>\r\n              <Button color=\"secondary\" onClick={login}>Login</Button>\r\n            </NavItem> :\r\n            <NavItem>\r\n              <Button color=\"secondary\" onClick={logout}>Logout</Button>\r\n            </NavItem>\r\n          }\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>;\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'react-bootstrap';\r\n\r\nclass Home extends Component {\r\n\r\n  render() {\r\n    const {login } = this.props;\r\n    if (this.props.authenticated === null) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        {this.props.navbar}\r\n        <Container fluid>\r\n          { this.props.authenticated ?\r\n            <div>\r\n              <p>Welcome, {this.props.user.name}</p>\r\n              <Button color=\"secondary\">\r\n                <Link className=\"app-link\" to=\"/guides\">Manage Simienpark database</Link>\r\n              </Button>\r\n            </div> :\r\n            <div>\r\n              <p>Please log in to manage Simienpark database.</p>\r\n              <Button color=\"secondary\" onClick={login}>\r\n                Login to Simienpark tours\r\n              </Button>\r\n            </div>\r\n          }\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport { Link, withRouter} from 'react-router-dom'\r\nimport Table from 'react-bootstrap/Table'\r\n//import Row from 'react-bootstrap/Row'\r\n//import Col from 'react-bootstrap/Col'\r\n\r\nclass AllGuides extends Component {\r\n  state = {\r\n    data: [],\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  async fetchGuides() {\r\n    console.log(\"fetching guides\");\r\n\r\n    const response = await this.props.api.getAllGuides();\r\n    const jayson = await response.json();\r\n    console.log(jayson);\r\n    //const url = response;\r\n      //'https://en.wikipedia.org/w/api.php?action=opensearch&search=Russia&format=json&origin=*'\r\n      //'http://localhost:8080/api/v1/guides'\r\n\r\n  \r\n        this.setState({\r\n          data:jayson});\r\n      \r\n  }\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    this.fetchGuides();\r\n  }\r\n  handleClick(id) {\r\n    console.log(\"deleting \" + id)\r\n    this.props.api.deleteGuide(id).then(() => { console.log(\"calling fetch\"); this.fetchGuides() });\r\n    // fetch('http://localhost:8080/api/v1/guides/' + id, {\r\n    //   method: 'DELETE'\r\n\r\n\r\n    // }).then(() => { this.fetchGuides() });\r\n\r\n  }\r\n  handleClickEdit(id) {\r\n    console.log(\"editing \" + id)\r\n\r\n    this.props.history.push('guides/edit');\r\n    //.then(() => {console.log(\"calling fetch\"); this.fetchGuides()});\r\n\r\n  }\r\n  render() {\r\n    console.log(\"rendering\");\r\n    const { data } = this.state\r\n    //console.log(data);\r\n\r\n\r\n    const result = data.map((guide, index) => {\r\n      //console.log(\"entry name \" + guide.name);\r\n      //console.log(\"index \" + index);\r\n      //console.log(\"entry id \" + guide.id);\r\n      const guideUrl = \"/guides/\" + guide.id;\r\n      /*       return(\r\n              <Row>\r\n                <Col xs={3} key={index}><Link to={guideUrl}>{guide.name}</Link></Col>\r\n                <Col xs={3} >{guide.email}</Col>\r\n                <Col xs={2} >{guide.phone}</Col>\r\n      \r\n                 <Col xs={1}> <button onClick={() => { this.handleClick(guide.id) }}>Delete</button></Col>\r\n                <Col xs={1}><button onClick={() => {  this.props.history.push('guides/edit/'+guide.id) }}>Edit</button></Col>\r\n              </Row>\r\n             ) */\r\n             \r\n      return (\r\n\r\n            <tr key={index}>          \r\n              <td><Link to={guideUrl}>{guide.name}</Link></td>\r\n              <td>{guide.email}</td>\r\n              <td>{guide.phone}</td>\r\n              <td><button onClick={() => { this.handleClick(guide.id) }}>Delete</button></td>\r\n              <td><button onClick={() => {  this.props.history.push('guides/edit/'+guide.id) }}>Edit</button></td>\r\n            </tr>\r\n\r\n      )\r\n    })\r\n\r\n    //return <div className=\"jumbotron\"> <table><tbody>{result}</tbody></table></div>\r\n    //return <Container>{result}</Container>\r\n    return(  \r\n      <div>     \r\n      {this.props.navbar}\r\n    <Table responsive striped bordered hover>\r\n      <thead>\r\n       <tr>\r\n         \r\n         <th>Name</th>\r\n         <th>E-mail</th>\r\n         <th>Phone number</th>\r\n         <th>#</th>\r\n         <th>#</th>\r\n       </tr>\r\n     </thead> \r\n     <tbody>{result}</tbody>\r\n    </Table>\r\n    </div> )\r\n\r\n  }\r\n}\r\n\r\nexport default withRouter(AllGuides)","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass AddGuide extends Component {\r\n  state = {\r\n    \r\n    \r\n  }\r\n  constructor() {\r\n \r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(event.target);\r\n\r\n\r\n\r\n    //fetch('http://localhost:8080/api/v1/guides/', {\r\n\r\n    const body = JSON.stringify({\r\n      \"name\": event.target.name.value, \"nickname\": event.target.nickname.value,\r\n      \"password\": event.target.password.value,\r\n      //, \"english\": event.target.english.value === \"on\" ? true : false,\r\n      \"english\": this.state.englishChecked,\r\n      \"french\": this.state.frenchChecked,\r\n      \"email\": event.target.email.value,\r\n      \"phone\": event.target.phone.value\r\n    });\r\n\r\n    // }).then(() => this.props.history.push('/'));\r\n    const newGuide = await this.props.api.createGuide(body);\r\n    //const jayson = await newGuide.json();\r\n    //console.log(jayson);\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\ncomponentDidMount(){\r\n  \r\n  this.setState({\r\n  \r\n\r\n   frenchChecked : false,\r\n   englishChecked : false});\r\n\r\n}\r\n\r\n  render() { \r\n    return (\r\n     \r\n      <div>\r\n        {this.props.navbar}\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n          <h3>Register as a guide:</h3>\r\n          <br />\r\n          <Form.Group controlid=\"formAddGuide\">\r\n            <Form.Label>Enter your name (required):</Form.Label>\r\n            <Form.Control size=\"sm\" name=\"name\" placeholder=\"Enter your name\" />\r\n            <Form.Label>Enter your nickname (required):</Form.Label>\r\n            <Form.Control size=\"sm\" name=\"nickname\" placeholder=\"Enter your nickname\" />\r\n            <Form.Label>Create your password (required):</Form.Label>\r\n            <Form.Control size=\"sm\" name=\"password\" placeholder=\"Enter your password\" />\r\n            <Form.Label>Enter your e-mail (required):</Form.Label>\r\n            <Form.Control size=\"sm\" type=\"email\" name=\"email\" />\r\n            <Form.Label>Enter your phone nimber (required):</Form.Label>\r\n            <Form.Control size=\"sm\" name=\"phone\" />\r\n            <Form.Group controlId=\"formBasicCheckbox\">\r\n              <Form.Check type=\"checkbox\" name=\"english\" label=\"Yes, I speak English\" defaultChecked={this.state.englishChecked}\r\n                onClick={() => this.setState({ englishChecked: !this.state.englishChecked })} />\r\n              <Form.Check type=\"checkbox\" name=\"french\" label=\"Oui, je parle Français\" defaultChecked={this.state.frenchChecked} onClick={() => this.setState({ frenchChecked: !this.state.frenchChecked })} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">OK</Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(AddGuide)","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass EditGuide extends Component {\r\n  state = {\r\n    data: [],\r\n\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async fetchGetGuideById() {\r\n\r\n    const response = await this.props.api.getGuideById(this.props.match.params.id);\r\n    const jayson = await response.json();\r\n    console.log(jayson);\r\n\r\n\r\n    this.setState({\r\n      data: jayson,\r\n\r\n      frenchChecked: jayson.french,\r\n      englishChecked: jayson.english\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n\r\n    console.log(event.target.french);\r\n\r\n    const body = JSON.stringify({\r\n      \"name\": event.target.name.value, \"nickname\": event.target.nickname.value,\r\n      \"password\": event.target.password.value,\r\n\r\n      \"english\": this.state.englishChecked,\r\n      \"french\": this.state.frenchChecked,\r\n      \"email\": event.target.email.value,\r\n      \"phone\": event.target.phone.value\r\n    });\r\n    const guideId = Number(this.props.match.params.id);\r\n\r\n    const updatedGuideData = await this.props.api.updateGuide(body, guideId);\r\n    const jayson = await updatedGuideData.json();\r\n    //console.log(jayson);\r\n    this.setState({\r\n      data: jayson\r\n    });\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.fetchGetGuideById();\r\n  }\r\n  render() {\r\n    const { data } = this.state;\r\n    console.log(\"value of english \" + this.state.englishChecked);\r\n    if (data) {\r\n      return (\r\n\r\n        <div>\r\n          {this.props.navbar}\r\n          <Form onSubmit={this.handleSubmit}>\r\n\r\n            <h3>Edit your profile:</h3>\r\n            <br />\r\n            <Form.Group controlId=\"formAddGuide\">\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control size=\"sm\" name=\"name\" defaultValue={data.name} />\r\n              <Form.Label>Nickname:</Form.Label>\r\n              <Form.Control size=\"sm\" name=\"nickname\" defaultValue={data.nickname} />\r\n              <Form.Label>Enter your password:</Form.Label>\r\n              <Form.Control size=\"sm\" name=\"password\" defaultValue=\"\" />\r\n              <Form.Label>Enter your e-mail (required):</Form.Label>\r\n              <Form.Control size=\"sm\" name=\"email\" type=\"email\" defaultValue={data.email} />\r\n              <Form.Label>Enter your phone number (required):</Form.Label>\r\n              <Form.Control size=\"sm\" name=\"phone\" defaultValue={data.phone} />\r\n              <Form.Group controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" name=\"english\" label=\"Yes, I speak English\" defaultChecked={this.state.englishChecked}\r\n                  onClick={() => this.setState({ englishChecked: !this.state.englishChecked })} />\r\n\r\n                <Form.Check onClick={() => this.setState({ frenchChecked: !this.state.frenchChecked })} type=\"checkbox\" name=\"french\" label=\"Oui, je parle Français\" defaultChecked={this.state.frenchChecked} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">SAVE CHANGES</Button>\r\n            </Form.Group>\r\n          </Form>  </div>\r\n      );\r\n    } return <p> Loading... </p>\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(EditGuide)","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n//import {Container, Row, Cow} from 'react-bootstrap';\r\n\r\nclass AllTourInquiries extends Component {\r\n  state = {\r\n    data: [],\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  async fetchTourInquiries() {\r\n    console.log(\"fetching tour inquiries\");\r\n    // const url =\r\n    //   //'https://en.wikipedia.org/w/api.php?action=opensearch&search=Russia&format=json&origin=*'\r\n    //   'http://localhost:8080/api/v1/tour-inquiries'\r\n\r\n    // fetch(url)\r\n    //   .then(result => result.json())\r\n    //   .then(result => {\r\n    //     console.log(result);\r\n    //     this.setState({\r\n    //       data: result,\r\n    //     })\r\n    //   })\r\n\r\n    const response = await this.props.api.getAllTourInquiries();\r\n    const jayson = await response.json();\r\n    console.log(jayson);\r\n\r\n    this.setState({\r\n      data: jayson\r\n    });\r\n  }\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    this.fetchTourInquiries();\r\n  }\r\n\r\n  // async fetchDeleteTourInquiry(id){\r\n  //   const response = await this.props.api.deleteTourInquiry(id);\r\n  //   const jayson = await response.json();\r\n  //   console.log(jayson);\r\n\r\n  //   this.setState({\r\n  //     data: jayson\r\n  //   });\r\n\r\n  // }\r\n  handleClick(id) {\r\n    console.log(\"deleting \" + id)\r\n\r\n     \r\n    this.props.api.deleteTourInquiry(id).then(() => { console.log(\"calling fetch\"); this.fetchTourInquiries() });\r\n    \r\n    // fetch('http://localhost:8080/api/v1/tour-inquiries/' + id, {\r\n    //   method: 'DELETE'\r\n\r\n\r\n    // }).then(() => { console.log(\"calling fetch\"); this.fetchTourInquiries() });\r\n\r\n  }\r\n  handleClickEdit(id) {\r\n    console.log(\"editing \" + id)\r\n\r\n    this.props.history.push('tour-inquiries/edit');\r\n    //.then(() => {console.log(\"calling fetch\"); this.fetchGuides()});\r\n\r\n  }\r\n  render() {\r\n    console.log(\"rendering\");\r\n    const { data } = this.state;\r\n    //const { isAuthenticated, login, logout } = this.props;\r\n    //console.log(data);\r\n\r\n\r\n    const result = data.map((tourInquiry, index) => {\r\n      //console.log(\"entry name \" + guide.name);\r\n      //console.log(\"index \" + index);\r\n      //console.log(\"entry id \" + guide.id);\r\n      const tourInquiriyUrl = \"/tour-inquiries/\" + tourInquiry.id;\r\n      /*       return (<tr key={index} >\r\n              <td><Link to={tourInquiriyUrl}>{tourInquiry.name} {tourInquiry.surname}</Link>\r\n              </td>\r\n              <td>\r\n                <button onClick={() => { this.handleClick(tourInquiry.id) }}>Delete</button>\r\n                <button onClick={() => {  this.props.history.push('tour-inquiries/edit/'+tourInquiry.id) }}>Edit</button>\r\n              </td>\r\n            </tr>) */\r\n\r\n      return (\r\n\r\n        <tr key={index}>\r\n          <td><Link to={tourInquiriyUrl}>{tourInquiry.name} {tourInquiry.surname}</Link></td>\r\n          <td>{tourInquiry.email}</td>\r\n\r\n          <td><button onClick={() => { this.handleClick(tourInquiry.id) }}>Delete</button></td>\r\n          <td><button onClick={() => { this.props.history.push('tour-inquiries/edit/' + tourInquiry.id) }}>Edit</button></td>\r\n          <td><button onClick={() => { this.props.history.push('/payment-requests/' + tourInquiry.id) }}>Request payment</button></td>\r\n\r\n        </tr>\r\n\r\n      )\r\n\r\n\r\n\r\n\r\n    })\r\n\r\n    //return <div className=\"jumbotron\"> <table><tbody>{result}</tbody></table></div>\r\n    return (\r\n      <div>     \r\n      {this.props.navbar}\r\n      \r\n      <Table responsive striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n\r\n            <th>Name</th>\r\n            <th>E-mail</th>\r\n            <th>#</th>\r\n            <th>#</th>\r\n            <th>#</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{result}</tbody>\r\n      </Table> \r\n      \r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default withRouter(AllTourInquiries)","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n//import {Container, Row, Cow} from 'react-bootstrap';\r\n\r\nclass EditTourInquiry extends Component {\r\n    state = {\r\n        data: [],\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      async fetchGetTourInquiryById() {\r\n\r\n        const response = await this.props.api.getTourInquiryById(this.props.match.params.id);\r\n        const jayson = await response.json();\r\n        console.log(jayson);\r\n    \r\n    \r\n        this.setState({\r\n          data: jayson\r\n        });\r\n      }\r\n      async handleSubmit(event) {\r\n        event.preventDefault();\r\n    \r\n        const body = JSON.stringify({\r\n          \"name\": event.target.name.value, \"surname\": event.target.surname.value,\r\n          \"email\": event.target.email.value,\r\n    \r\n          \"days\": event.target.days.value,\r\n          \"persons\": event.target.persons.value,\r\n          \"date\": event.target.date.value,\r\n          \"message\": event.target.message.value\r\n        });\r\n        const tourInquiryId = Number(this.props.match.params.id);\r\n    \r\n        const updateTourInquiryData = await this.props.api.updateTourInquiry(body,tourInquiryId );\r\n        const jayson = await updateTourInquiryData.json();\r\n        //console.log(jayson);\r\n        this.setState({\r\n          data: jayson\r\n        });\r\n        this.props.history.push('/');\r\n      }\r\n    \r\n    componentDidMount() {\r\n       \r\n       this.fetchGetTourInquiryById(); \r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const { data } = this.state;\r\n        if (data) {\r\n            console.log('single tour inquiry data = ' + JSON.stringify(data));\r\n            return (//<p> {data.name}</p>\r\n                <div>\r\n                {this.props.navbar}\r\n                <Form onSubmit={this.handleSubmit}>\r\n\r\n                    <h3>Edit tour inquiry:</h3>\r\n                    <br />\r\n\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control size=\"sm\" name=\"name\" defaultValue={data.name} />\r\n                    <Form.Label>Surname:</Form.Label>\r\n                    <Form.Control size=\"sm\" name=\"surname\" defaultValue={data.surname} />\r\n                    <Form.Label>Tourist's e-mail:</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"email\" name= \"email\" defaultValue={data.email} />\r\n\r\n\r\n                    <Form.Label>How many days do you want to trek?</Form.Label>\r\n                    <Form.Control size=\"sm\" name=\"days\" defaultValue={data.days} />\r\n\r\n                    <Form.Label>How many persons are in your group?</Form.Label>\r\n                    <Form.Control size=\"sm\" name=\"persons\" defaultValue={data.persons} />\r\n\r\n                    <Form.Label>Date you want to start the tour:</Form.Label>\r\n                    <Form.Control size=\"sm\" name=\"date\" placeholder=\"Enter the start date\" defaultValue={data.date} />\r\n\r\n                    <Form.Label>Your message:</Form.Label>\r\n                    <Form.Control size=\"sm\" name=\"message\" as=\"textarea\" rows=\"3\" defaultValue={data.message} />\r\n                    <Button variant=\"primary\" type=\"submit\">Edit tour details</Button>\r\n                </Form></div>\r\n            );\r\n\r\n\r\n        }\r\n\r\n\r\n        return <p> Loading... </p>\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(EditTourInquiry)","import React, { Component } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nclass AddTourInquiry extends Component {\r\n    state = {\r\n        data: [],\r\n    }\r\n    constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    console.log(event.target);\r\n    this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n   \r\n    fetch('http://localhost:8080/api/v1/bookings', {\r\n      method: 'POST',\r\n      body:  JSON.stringify({\"name\": event.target.name.value,\"surname\": event.target.surname.value, \"email\":event.target.email.value, \r\n      \"days\": event.target.days.value, \"persons\": event.target.persons.value,\r\n      \"date\": event.target.date.value, \"message\": event.target.message.value}),\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => this.props.history.push('/success'));\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    if (data){\r\n    return (\r\n     \r\n      \r\n    <Form onSubmit={this.handleSubmit}> \r\n    <Form.Group controlid=\"formBooking\">\r\n    <h2>Guided Tours</h2>\r\n    <h6>If you want a guided tour in the Simien Mountains including professional guide and 4wd transportation, use the contact form below:</h6>\r\n    <br/>\r\n    <Form.Label>Your name (required):</Form.Label>\r\n    <Form.Control size = \"sm\" name=\"name\" placeholder=\"Enter your name\" />\r\n    <Form.Label>Your surname (required):</Form.Label>\r\n    <Form.Control size = \"sm\" name=\"surname\" placeholder=\"Enter your surname\" />\r\n    <Form.Label>Your e-mail (required):</Form.Label>\r\n    <Form.Control size = \"sm\" type=\"email\" name=\"email\" placeholder=\"Enter your e-mail\" />\r\n    {/* <Form.Text className=\"text-muted\">\r\n      We'll never share your email with anyone else.\r\n    </Form.Text> */}\r\n\r\n  </Form.Group>\r\n  <Form.Group controlId=\"bookingForm.ControlSelectDays\">\r\n  <Form.Label>How many days do you want to trek?</Form.Label>\r\n    <Form.Control size = \"sm\" name=\"days\" as=\"select\">\r\n    <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n      <option>6</option>\r\n      <option>7</option>\r\n      <option>8</option>\r\n      <option>9</option>\r\n      <option>10</option>\r\n      <option>11</option>\r\n      <option>12</option>\r\n      <option>13</option>\r\n      <option>14</option>\r\n      <option>15</option>\r\n    </Form.Control>\r\n    </Form.Group>\r\n    <Form.Group controlId=\"bookingForm.ControlSelectPersons\">\r\n  <Form.Label>How many persons are in your group?</Form.Label>\r\n    <Form.Control size = \"sm\" name=\"persons\" as=\"select\">\r\n      <option>1</option>\r\n      <option>2</option>\r\n      <option>3</option>\r\n      <option>4</option>\r\n      <option>5</option>\r\n      <option>6</option>\r\n      <option>7</option>\r\n      <option>8</option>\r\n      <option>9</option>\r\n      <option>10</option>\r\n      <option>11</option>\r\n      <option>12</option>\r\n      <option>13</option>\r\n      <option>14</option>\r\n      <option>15</option>\r\n    </Form.Control>\r\n    </Form.Group>\r\n    <Form.Group controlId=\"formBasicBookingDate\">\r\n    <Form.Label>Date you want to start the tour:</Form.Label>\r\n    <Form.Control size = \"sm\" type=\"date\" name=\"date\" placeholder=\"Enter the start date\" />\r\n    </Form.Group>\r\n    <Form.Group controlId=\"bookingForm.ControlTextareaMessage\">\r\n    <Form.Label>Your message:</Form.Label>\r\n    <Form.Control size = \"sm\" name=\"message\"  as=\"textarea\" rows=\"3\" />\r\n  </Form.Group>\r\n  \r\n  <Button ref=\"btn\" variant=\"primary\" type=\"submit\">\r\n    SEND\r\n  </Button>\r\n</Form>\r\n    );\r\n    }return <p> Loading... </p>\r\n  }\r\n\r\n        \r\n}\r\n\r\nexport default AddTourInquiry","import React, { Component } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass RequestPayment extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async fetchGetTourInquiryById() {\r\n\r\n        const response = await this.props.api.getTourInquiryById(this.props.match.params.id);\r\n        const jayson = await response.json();\r\n        console.log(jayson);\r\n\r\n\r\n        this.setState({\r\n            data: jayson\r\n        });\r\n    }\r\n\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const body = JSON.stringify({\r\n            \"inquiryId\": this.props.match.params.id,\r\n            \"deposit\": event.target.deposit.value,\r\n            \"mailText\": event.target.message.value,\r\n            \"clientMail\": event.target.email.value,\r\n            \r\n            \"requestDate\": new Date()\r\n        });\r\n\r\n\r\n        const thisRequestPayment = await this.props.api.createPaymentRequest(body);\r\n        const jayson = await thisRequestPayment.json();\r\n        //console.log(jayson);\r\n        this.setState({\r\n            data: jayson\r\n        });\r\n        //this.props.history.push('/');\r\n\r\n   \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchGetTourInquiryById();\r\n        // console.log(\"payment\");\r\n        // const url ='http://localhost:8080/api/v1/tour-inquiries/' + this.props.match.params.id\r\n\r\n        // fetch(url)\r\n        //     .then(result => result.json())\r\n        //     .then(result => {\r\n        //         this.setState({\r\n\r\n\r\n        //             data: result,\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const { data } = this.state;\r\n        console.log('payment request data = ' + data);\r\n        if (data && data.name) {\r\n\r\n            var textForTheMail = \"Dear \" + data.name + \", \\n\"\r\n                // eslint-disable-next-line\r\n                + \"\\n Please pay the deposit using this link: \" + 'https://reservation.simienpark.org/payments/' + data.id\r\n                + \"\\n _________________________________\"\r\n                // eslint-disable-next-line\r\n                + \"\\n Tour details: \\n Tourist: \" + data.name + \" \" + data.surname + \" \\n\" + \" Tour lasts: \" + data.days + \" days \\n\" + \" Tour starts: \" + data.date.substr(0, 10) + \" \\n\" + \" How many persons: \"\r\n                // eslint-disable-next-line\r\n                + data.persons + \" \\n\" + \" Additional information: \" + data.message +\r\n                \"\\n \\n If you have any questions, feel free to contact us by replying to this email.\" +\r\n                \"\\n -----\" +\r\n                // eslint-disable-next-line\r\n                \"\\n Best Regards,\" + \" \\n Simien Mountains National Park team\";\r\n            console.log(textForTheMail);\r\n            return (//<p> {data.name}</p>\r\n\r\n                <Form onSubmit={this.handleSubmit}>\r\n\r\n                    <h5>Send a bill for the tourist: {data.name} {data.surname}</h5>\r\n                    <br />\r\n                    <Form.Group controlId=\"formPaymentRequest\">\r\n                        <Form.Label>Tourist's e-mail:</Form.Label>\r\n                        <Form.Control size=\"sm\" name = \"email\" type=\"email\" defaultValue={data.email} />\r\n\r\n                        <Form.Label>Enter total price:</Form.Label>\r\n                        <Form.Control size=\"sm\" name=\"totalPrice\" placeholder=\"Enter total price\" />\r\n                        <Form.Label>Deposit to pay:</Form.Label>\r\n                        <Form.Control size=\"sm\" name=\"deposit\" placeholder=\"10 percents from total price\" />\r\n\r\n\r\n                        <Form.Label>Message for tourist:</Form.Label>\r\n                        <Form.Control size=\"sm\" name=\"message\" as=\"textarea\" rows=\"15\" defaultValue={textForTheMail} />\r\n                        <Button variant=\"primary\" type=\"submit\">SEND payment request</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            );\r\n\r\n\r\n        }\r\n\r\n        return <p> Loading... </p>\r\n    }\r\n}\r\n\r\nexport default withRouter(RequestPayment)","import React,{ Component } from \"react\"\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nclass AllPayments extends Component{\r\n    state = {\r\n        data: [],\r\n      }\r\n      constructor() {\r\n        super();\r\n        this.handleClick = this.handleClick.bind(this);\r\n      }\r\n    \r\n      fetchPayments() {\r\n        console.log(\"fetching payments\");\r\n        const url =\r\n          //'https://en.wikipedia.org/w/api.php?action=opensearch&search=Russia&format=json&origin=*'\r\n          'http://localhost:8080/api/v1/payments'\r\n    \r\n        fetch(url)\r\n          .then(result => result.json())\r\n          .then(result => {\r\n            console.log(result);\r\n            this.setState({\r\n              data: result,\r\n            })\r\n          })\r\n      }\r\n      // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n      componentDidMount() {\r\n        this.fetchPayments();\r\n      }\r\n      handleClick(id) {\r\n        console.log(\"deleting \" + id)\r\n    \r\n        fetch('http://localhost:8080/api/v1/payments/' + id, {\r\n          method: 'DELETE'\r\n    \r\n    \r\n        }).then(() => { console.log(\"calling fetch\"); this.fetchPayments() });\r\n    \r\n      }\r\n      handleClickEdit(id) {\r\n        console.log(\"editing \" + id)\r\n    \r\n        this.props.history.push('payments/edit');\r\n        //.then(() => {console.log(\"calling fetch\"); this.fetchGuides()});\r\n    \r\n      }\r\n      render() {\r\n        console.log(\"rendering\");\r\n        const { data } = this.state\r\n        //console.log(data);\r\n    \r\n    \r\n        const result = data.map((payment, index) => {\r\n          //console.log(\"entry name \" + guide.name);\r\n          //console.log(\"index \" + index);\r\n          //console.log(\"entry id \" + guide.id);\r\n          \r\n          /*       return(\r\n                  <Row>\r\n                    <Col xs={3} key={index}><Link to={guideUrl}>{guide.name}</Link></Col>\r\n                    <Col xs={3} >{guide.email}</Col>\r\n                    <Col xs={2} >{guide.phone}</Col>\r\n          \r\n                     <Col xs={1}> <button onClick={() => { this.handleClick(guide.id) }}>Delete</button></Col>\r\n                    <Col xs={1}><button onClick={() => {  this.props.history.push('guides/edit/'+guide.id) }}>Edit</button></Col>\r\n                  </Row>\r\n                 ) */\r\n                 \r\n          return (\r\n    \r\n                <tr key={index}>          \r\n                  <td>{payment.inquiryId}</td>\r\n                  <td>{payment.payment}</td>\r\n                  <td>{payment.paymentDate}</td>\r\n                  <td>{payment.id}</td>\r\n                  <td><button onClick={() => { this.handleClick(payment.id) }}>Delete</button></td>\r\n                  <td><button onClick={() => {  this.props.history.push('payments/edit/'+payment.id) }}>Edit</button></td>\r\n                </tr>\r\n    \r\n          )\r\n        })\r\n    \r\n        //return <div className=\"jumbotron\"> <table><tbody>{result}</tbody></table></div>\r\n        //return <Container>{result}</Container>\r\n        return(        \r\n    \r\n        <Table responsive striped bordered hover>\r\n          <thead>\r\n           <tr>\r\n             \r\n             <th>Inquiry ID</th>\r\n             <th>Payment</th>\r\n             <th>Payment date</th>\r\n             <th>Payment ID</th>\r\n             <th>#</th>\r\n             <th>#</th>\r\n           </tr>\r\n         </thead> \r\n         <tbody>{result}</tbody>\r\n        </Table>)\r\n    \r\n      }\r\n}\r\nexport default AllPayments","import React, { Component } from 'react'\r\nimport { Form, Button, Table } from 'react-bootstrap'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\n\r\nclass AllPaymentRequests extends Component {\r\n\r\n\r\nstate = {\r\n    data: [],\r\n  }\r\n  constructor() {\r\n    super();\r\n   // this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  async fetchPaymentRequests() {\r\n    console.log(\"fetching payment requests\");\r\n    // const url =\r\n    //   //'https://en.wikipedia.org/w/api.php?action=opensearch&search=Russia&format=json&origin=*'\r\n    //   'http://localhost:8080/api/v1/tour-inquiries'\r\n\r\n    // fetch(url)\r\n    //   .then(result => result.json())\r\n    //   .then(result => {\r\n    //     console.log(result);\r\n    //     this.setState({\r\n    //       data: result,\r\n    //     })\r\n    //   })\r\n\r\n    const response = await this.props.api.getAllPaymentRequests();\r\n    const jayson = await response.json();\r\n    console.log(jayson);\r\n\r\n    this.setState({\r\n      data: jayson\r\n    });\r\n  }\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    this.fetchPaymentRequests();\r\n  }\r\n//   handleClick(id) {\r\n//     console.log(\"deleting \" + id)\r\n\r\n//     fetch('http://localhost:8080/api/v1/paymentRequests/' + id, {\r\n//       method: 'DELETE'\r\n\r\n\r\n//     }).then(() => { console.log(\"calling fetch\"); this.fetchPaymentRequests() });\r\n\r\n//   }\r\n//   handleClickEdit(id) {\r\n//     console.log(\"editing \" + id)\r\n\r\n//     this.props.history.push('paymentRequests/edit');\r\n//     //.then(() => {console.log(\"calling fetch\"); this.fetchGuides()});\r\n\r\n//   }\r\n  render() {\r\n    console.log(\"rendering\");\r\n    const { data } = this.state\r\n    //console.log(data);\r\n\r\n\r\n    const result = data.map((paymentRequest, index) => {\r\n      //console.log(\"entry name \" + guide.name);\r\n      //console.log(\"index \" + index);\r\n      //console.log(\"entry id \" + guide.id);\r\n      const requestPaymentUrl = \"/paymentRequests/\" + paymentRequest.id;\r\n      /*       return (<tr key={index} >\r\n              <td><Link to={tourInquiriyUrl}>{tourInquiry.name} {tourInquiry.surname}</Link>\r\n              </td>\r\n              <td>\r\n                <button onClick={() => { this.handleClick(tourInquiry.id) }}>Delete</button>\r\n                <button onClick={() => {  this.props.history.push('tour-inquiries/edit/'+tourInquiry.id) }}>Edit</button>\r\n              </td>\r\n            </tr>) */\r\n\r\n      return (\r\n\r\n        <tr key={index}>\r\n          <td><Link to={requestPaymentUrl}>{paymentRequest.inquiryId}</Link></td>\r\n          <td>{paymentRequest.mailText}</td>\r\n          <td>{paymentRequest.requestDate}</td>\r\n          <td>{paymentRequest.clientMail}</td>\r\n          \r\n        \r\n        </tr>\r\n\r\n      )\r\n\r\n\r\n\r\n\r\n    })\r\n\r\n    //return <div className=\"jumbotron\"> <table><tbody>{result}</tbody></table></div>\r\n    return (\r\n      <div>     \r\n      {this.props.navbar}\r\n      <Table responsive striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n\r\n            <th>Inquiry ID</th>\r\n            <th>Mail text</th>\r\n            <th>Requerst date</th>\r\n            <th>Client's mail</th>\r\n  \r\n          </tr>\r\n        </thead>\r\n        <tbody>{result}</tbody>\r\n      </Table>\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default withRouter(AllPaymentRequests)\r\n\r\n","import React, { Component } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nclass Pay extends Component {\r\n    state = {\r\n        data: [],\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async fetchGetDepositAmountByInquiryId() {\r\n        const response = await this.props.api.getDepositAmountByInquiryId(this.props.match.params.inquiryId);\r\n        const jayson = await response.text();\r\n        console.log(jayson);\r\n\r\n\r\n        this.setState({\r\n            data: jayson\r\n            //,deposit : jayson.deposit\r\n        });\r\n\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n\r\n        console.log(event.target);\r\n        const body = JSON.stringify({\r\n            \"inquiryId\": this.props.match.params.inquiryId,\r\n            \"payment\": event.target.deposit.value,\r\n            \"paymentDate\": new Date()\r\n\r\n        });\r\n        const createPaymentData = await this.props.api.createPayment(body);\r\n\r\n        \r\n        const paypalUrl = await createPaymentData.text();\r\n        console.log(paypalUrl);\r\n        this.setState({\r\n          data:paypalUrl});\r\n\r\n           window.location.replace(paypalUrl);\r\n    \r\n        // fetch('http://localhost:8080/api/v1/payments', {\r\n        //     method: 'POST',\r\n\r\n        //     body: JSON.stringify({\r\n        //         \"inquiryId\": this.props.match.params.inquiryId,\r\n        //         \"payment\": event.target.deposit.value,\r\n        //         \"paymentDate\": new Date()\r\n\r\n        //     }),\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json'\r\n        //     }\r\n        // }).then(res => res.text()).then(txt => window.location.replace(txt)); /* window.location.replace(\"http://google.com\")*/\r\n    }\r\n    // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n    componentDidMount() {\r\n        // eslint-disable-next-line\r\n        // const url =\r\n        //     //'https://en.wikipedia.org/w/api.php?action=opensearch&search=Russia&format=json&origin=*'\r\n        //     'http://localhost:8080/api/v1/payments/' + this.props.match.params.inquiryId\r\n        this.fetchGetDepositAmountByInquiryId();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const { data } = this.state;\r\n        if (data) {\r\n            console.log('pay data = ' + data);\r\n            return (//<p> {data.name}</p>\r\n\r\n                <Form onSubmit={this.handleSubmit}>\r\n\r\n                    <h3>Hello, please pay this deposit to book your tour:</h3>\r\n                    <br />\r\n                    <Form.Group controlId=\"formPay\">\r\n                        <Form.Label>Deposit, EUR:</Form.Label>\r\n                        <Form.Control size=\"sm\" type=\"number\" name=\"deposit\" defaultValue={data} />\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">Pay</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n            );\r\n\r\n\r\n        }\r\n\r\n        return <p> Loading... </p>\r\n    }\r\n}\r\n\r\nexport default withRouter(Pay)","import React, { Component } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nclass Process extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <Alert variant=\"success\"><Alert.Heading>Thank you for your payment.</Alert.Heading>\r\n            <p className=\"mb-0\">\r\n            All the guide's contacts will be send to your mail within 24 hours. \r\n            See you soon in Ethiopia!</p></Alert>)\r\n        \r\n         \r\n    }\r\n    \r\n}\r\n\r\nexport default Process","import React, { Component } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nclass Cancel extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <Alert variant=\"danger\" >\r\n            <p className=\"mb-0\">\r\n        Something went wrong. The payment hasn't done. Please try again. \r\n            </p></Alert> )\r\n        \r\n         \r\n    }\r\n    \r\n}\r\n\r\nexport default Cancel","import React, { Component } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nclass Success extends Component {\r\n\r\n    render() {\r\n        return(\r\n        <Alert variant=\"success\">\r\n        <p className=\"mb-0\">Thank you for your message. Our tour guides will reply you as soon as possible. \r\n            Have a nice day!</p></Alert>)\r\n        \r\n         \r\n    }\r\n    \r\n}\r\n\r\nexport default Success","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Security, SecureRoute, LoginCallback } from '@okta/okta-react';\nimport { withOktaAuth } from '@okta/okta-react';\nimport Api from './Api';\nimport NavBar from \"./NavBar\";\nimport Home from \"./Home\";\nimport AllGuides from './AllGuides';\nimport AddGuide from './AddGuide';\nimport EditGuide from './EditGuide';\nimport AllTourInquiries from './AllTourInquiries';\nimport EditTourInquiry from './EditTourInquiry';\nimport AddTourInquiry from './AddTourInquiry';\nimport AllPayments from './AllPayments';\nimport RequestPayment from './RequestPayment';\nimport AllPaymentRequests from './AllPaymentRequests';\nimport Pay from './Pay';\nimport Process from './Process';\nimport Cancel from './Cancel';\nimport Success from './Success';\n\nconst AuthWrapper = withOktaAuth(class WrappedRoutes extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { authenticated: null, user: null, api: new Api() };\n    this.checkAuthentication = this.checkAuthentication.bind(this);\n  }\n\n  async checkAuthentication() {\n    const authenticated = await this.props.authState.isAuthenticated;\n    if (authenticated !== this.state.authenticated) {\n      if (authenticated) {\n        const user = await this.props.authService.getUser();\n        let accessToken = await this.props.authService.getAccessToken();\n        this.setState({ authenticated, user, api: new Api(accessToken) });\n      }\n      else {\n        this.setState({ authenticated, user:null, api: new Api() });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    this.checkAuthentication();\n  }\n\n  async componentDidUpdate() {\n    this.checkAuthentication();\n  }\n\n  async login() {\n    if (this.state.authenticated === null) return; // do nothing if auth isn't loaded yet\n    this.props.authService.login('/');\n  }\n\n  async logout() {\n    this.props.authService.logout('/');\n  }\n\n  render() {\n    let {authenticated, user, api} = this.state;\n\n    if (authenticated === null) {\n      return null;\n    }\n\n    const navbar = <NavBar\n      isAuthenticated={authenticated}\n      login={this.login.bind(this)}\n      logout={this.logout.bind(this)}\n    />;\n    \n\n    return (\n      \n      <Switch>\n        <SecureRoute\n          path='/'\n          exact={true}\n          render={(props) => <Home {...props}  login={this.login.bind(this)} authenticated={authenticated} user={user} api={api} navbar={navbar} />}\n        />\n        <SecureRoute\n          path='/guides'\n          exact={true}\n          render={(props) => <AllGuides {...props}  authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        />\n         <SecureRoute\n          path='/guides/add'\n          exact={true}\n          render={(props) => <AddGuide {...props}  authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        />       \n        <SecureRoute\n          path='/guides/edit/:id'\n          render={(props) => <EditGuide {...props} authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        />\n        <SecureRoute\n          path='/tour-inquiries'\n          exact={true}\n          render={(props) => <AllTourInquiries{...props}  authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        />\n        <Route\n          path='/booking'\n          exact={true}\n          render={(props) => <AddTourInquiry{...props}  authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        />\n        <Route\n          path='/success'\n          exact={true}\n          render={(props) => <Success{...props}  authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        />\n        <SecureRoute\n          path='/tour-inquiries/edit/:id'\n          exact={true}\n          render={(props) => <EditTourInquiry{...props}  authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        />\n  \n        {/* <SecureRoute\n          path='/payments'\n          exact={true}\n          render={(props) => <AllPayments {...props}  authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        />\n        <SecureRoute\n          path='/paymentRequests'\n          exact={true}\n          render={(props) => <AllPaymentRequests {...props} authenticated={authenticated} user={user} api={api} navbar={navbar}/>}\n        /> */}\n        <SecureRoute\n          path='/payment-requests/:id'\n          exact={true}\n          render={(props) => <RequestPayment {...props} authenticated={authenticated} user={user} api={api}/>}\n        />\n        <Route\n          path='/payments/:inquiryId'\n          exact={true}\n          render={(props) => <Pay {...props} api={api}/>}\n        />\n        <Route\n          path='/process'\n          exact={true}\n          render={(props) => <Process {...props} />}\n        />\n        <Route\n          path='/cancel'\n          exact={true}\n          render={(props) => <Cancel {...props} />}\n        />\n\n      </Switch>\n    )\n  }\n});\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Security issuer='https://dev-251206.okta.com/oauth2/default'\n              clientId={process.env.REACT_APP_OKTA}\n              redirectUri={window.location.origin + '/callback'}\n              pkce={true}>\n          <Route path='/callback' component={LoginCallback} />\n          <AuthWrapper />\n        </Security>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\n//import 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import AddTourInquiry from './AddTourInquiry';\n// import AllGuides from './AllGuides';\n// import AddGuide from './AddGuide';\n// import EditGuide from './EditGuide';\n// import GuideProfile from './GuideProfile';\n// import AllTourInquiries from './AllTourInquiries';\n// import TourInquiry from './TourInquiry';\n// import RequestPayment from './RequestPayment';\n// import Pay from './Pay';\n// import AllPayments from './AllPayments';\n// import Process from './Process';\n// import Cancel from './Cancel';\n\n// import { BrowserRouter, Route, Switch } from 'react-router-dom';\n// import { Security, SecureRoute, LoginCallback } from '@okta/okta-react';\n\nReactDOM.render(\n /*  <BrowserRouter>\n    \n      <Switch>\n\n        < Route exact path=\"/\" component={AllGuides} />\n        <Route exact path=\"/guides/add\" component={AddGuide} />\n        <Route exact path=\"/guides/edit/:id\" component={EditGuide} />\n        <Route exact path=\"/guides/:id\" component={GuideProfile} />\n        \n        <Route exact path = \"/tourInquiries\" component={AllTourInquiries} /> \n        <Route exact path=\"/booking\" component={AddTourInquiry} />\n        <Route exact path=\"/tourInquiries/:id\" component={TourInquiry} />\n        <Route exact path=\"/paymentrequest/:id\" component={RequestPayment} />\n        <Route exact path=\"/payments\" component={AllPayments} />\n        <Route exact path=\"/payments/:id\" component={Pay} />\n        <Route exact path = \"/process\" component={Process} /> \n        <Route exact path = \"/cancel\" component={Cancel} /> \n      </Switch>\n   \n  </BrowserRouter>) */ <App/>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}